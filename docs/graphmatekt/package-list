$dokka.format:html-v1
$dokka.linkExtension:html
$dokka.location:////PointingToDeclaration/graphmatekt/[root]/index.html
$dokka.location://deepCopy/kotlin.collections.MutableList[Edges]#/PointingToDeclaration/graphmatekt/[root]/deep-copy.html
$dokka.location://toUnweightedAdjacencyList/kotlin.collections.MutableList[Edges]#/PointingToDeclaration/graphmatekt/[root]/to-unweighted-adjacency-list.html
$dokka.location://toWeightedAdjacencyList/kotlin.collections.MutableList[kotlin.collections.MutableList[kotlin.Int]]#/PointingToDeclaration/graphmatekt/[root]/to-weighted-adjacency-list.html
$dokka.location:/AdjacencyList///PointingToDeclaration/graphmatekt/[root]/-adjacency-list/index.html
$dokka.location:/Components///PointingToDeclaration/graphmatekt/[root]/-components/index.html
$dokka.location:/Edge///PointingToDeclaration/graphmatekt/[root]/-edge/index.html
$dokka.location:/Edges///PointingToDeclaration/graphmatekt/[root]/-edges/index.html
$dokka.location:/IntComponents///PointingToDeclaration/graphmatekt/[root]/-int-components/index.html
$dokka.location:/UnweightedAdjacencyList///PointingToDeclaration/graphmatekt/[root]/-unweighted-adjacency-list/index.html
$dokka.location:examples////PointingToDeclaration/graphmatekt/examples/index.html
$dokka.location:examples//amanda/#/PointingToDeclaration/graphmatekt/examples/amanda.html
$dokka.location:examples//amazing/#/PointingToDeclaration/graphmatekt/examples/amazing.html
$dokka.location:examples//amoebas/#/PointingToDeclaration/graphmatekt/examples/amoebas.html
$dokka.location:examples//baas/#/PointingToDeclaration/graphmatekt/examples/baas.html
$dokka.location:examples//bigtruck/#/PointingToDeclaration/graphmatekt/examples/bigtruck.html
$dokka.location:examples//birthday/#/PointingToDeclaration/graphmatekt/examples/birthday.html
$dokka.location:examples//blackvienna/#/PointingToDeclaration/graphmatekt/examples/blackvienna.html
$dokka.location:examples//boggle/#/PointingToDeclaration/graphmatekt/examples/boggle.html
$dokka.location:examples//brexit/#/PointingToDeclaration/graphmatekt/examples/brexit.html
$dokka.location:examples//buggyrobot/#/PointingToDeclaration/graphmatekt/examples/buggyrobot.html
$dokka.location:examples//builddeps/#/PointingToDeclaration/graphmatekt/examples/builddeps.html
$dokka.location:examples//buriedtreasure2/#/PointingToDeclaration/graphmatekt/examples/buriedtreasure2.html
$dokka.location:examples//buttonbashing/#/PointingToDeclaration/graphmatekt/examples/buttonbashing.html
$dokka.location:examples//cantinaOfBabel/#/PointingToDeclaration/graphmatekt/examples/cantina-of-babel.html
$dokka.location:examples//charlesincharge/#/PointingToDeclaration/graphmatekt/examples/charlesincharge.html
$dokka.location:examples//crossCountry/#/PointingToDeclaration/graphmatekt/examples/cross-country.html
$dokka.location:examples//day10a/#kotlin.collections.List[kotlin.String]/PointingToDeclaration/graphmatekt/examples/day10a.html
$dokka.location:examples//day18a/#kotlin.collections.List[kotlin.String]#kotlin.Int#kotlin.Int/PointingToDeclaration/graphmatekt/examples/day18a.html
$dokka.location:examples//day20a/#kotlin.collections.List[kotlin.String]#kotlin.Int#kotlin.Int/PointingToDeclaration/graphmatekt/examples/day20a.html
$dokka.location:examples//day3GearRatios2023/#/PointingToDeclaration/graphmatekt/examples/day3-gear-ratios2023.html
$dokka.location:examples//dijkstraCF/#/PointingToDeclaration/graphmatekt/examples/dijkstra-c-f.html
$dokka.location:examples//familydag/#/PointingToDeclaration/graphmatekt/examples/familydag.html
$dokka.location:examples//faultyrobot/#/PointingToDeclaration/graphmatekt/examples/faultyrobot.html
$dokka.location:examples//grid/#/PointingToDeclaration/graphmatekt/examples/grid.html
$dokka.location:examples//honeyheist/#/PointingToDeclaration/graphmatekt/examples/honeyheist.html
$dokka.location:examples//horrorList/#/PointingToDeclaration/graphmatekt/examples/horror-list.html
$dokka.location:examples//illumination/#/PointingToDeclaration/graphmatekt/examples/illumination.html
$dokka.location:examples//importspaghetti/#/PointingToDeclaration/graphmatekt/examples/importspaghetti.html
$dokka.location:examples//islandBuses/#/PointingToDeclaration/graphmatekt/examples/island-buses.html
$dokka.location:examples//kingEscape3/#/PointingToDeclaration/graphmatekt/examples/king-escape3.html
$dokka.location:examples//main/#/PointingToDeclaration/graphmatekt/examples/main.html
$dokka.location:examples//numbersConnectedToSymbol/#kotlin.collections.List[kotlin.String]/PointingToDeclaration/graphmatekt/examples/numbers-connected-to-symbol.html
$dokka.location:examples//repostsBFS/#/PointingToDeclaration/graphmatekt/examples/reposts-b-f-s.html
$dokka.location:examples//repostsDFS/#/PointingToDeclaration/graphmatekt/examples/reposts-d-f-s.html
$dokka.location:examples//rumor/#/PointingToDeclaration/graphmatekt/examples/rumor.html
$dokka.location:examples//slowleak/#/PointingToDeclaration/graphmatekt/examples/slowleak.html
$dokka.location:examples//speedyescape/#/PointingToDeclaration/graphmatekt/examples/speedyescape.html
$dokka.location:examples//torn2pieces/#/PointingToDeclaration/graphmatekt/examples/torn2pieces.html
$dokka.location:examples//treehouses/#/PointingToDeclaration/graphmatekt/examples/treehouses.html
$dokka.location:examples//twoknights/#/PointingToDeclaration/graphmatekt/examples/twoknights.html
$dokka.location:examples//units/#/PointingToDeclaration/graphmatekt/examples/units.html
$dokka.location:examples//walkforest/#/PointingToDeclaration/graphmatekt/examples/walkforest.html
$dokka.location:examples//watersheds/#/PointingToDeclaration/graphmatekt/examples/watersheds.html
$dokka.location:examples//wedding/#/PointingToDeclaration/graphmatekt/examples/wedding.html
$dokka.location:graphClasses////PointingToDeclaration/graphmatekt/graphClasses/index.html
$dokka.location:graphClasses/BaseGraph///PointingToDeclaration/graphmatekt/graphClasses/-base-graph/index.html
$dokka.location:graphClasses/BaseGraph/BaseGraph/#kotlin.Int#kotlin.Boolean/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/-base-graph.html
$dokka.location:graphClasses/BaseGraph/addEdge/#TypeParam(bounds=[kotlin.Any])#TypeParam(bounds=[kotlin.Any])#kotlin.Number?/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/add-edge.html
$dokka.location:graphClasses/BaseGraph/addNode/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/add-node.html
$dokka.location:graphClasses/BaseGraph/bfs/#TypeParam(bounds=[kotlin.Any])#TypeParam(bounds=[kotlin.Any])?#kotlin.Boolean/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/bfs.html
$dokka.location:graphClasses/BaseGraph/bfs/#kotlin.collections.List[TypeParam(bounds=[kotlin.Any])]#TypeParam(bounds=[kotlin.Any])?#kotlin.Boolean/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/bfs.html
$dokka.location:graphClasses/BaseGraph/connect/#TypeParam(bounds=[kotlin.Any])#TypeParam(bounds=[kotlin.Any])#kotlin.Number?/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/connect.html
$dokka.location:graphClasses/BaseGraph/currentVisitedNodes/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/current-visited-nodes.html
$dokka.location:graphClasses/BaseGraph/depth/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/depth.html
$dokka.location:graphClasses/BaseGraph/dfs/#TypeParam(bounds=[kotlin.Any])#kotlin.Boolean/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/dfs.html
$dokka.location:graphClasses/BaseGraph/dijkstra/#TypeParam(bounds=[kotlin.Any])#TypeParam(bounds=[kotlin.Any])?/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/dijkstra.html
$dokka.location:graphClasses/BaseGraph/distanceFromUtoV/#TypeParam(bounds=[kotlin.Any])#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/distance-from-uto-v.html
$dokka.location:graphClasses/BaseGraph/distanceTo/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/distance-to.html
$dokka.location:graphClasses/BaseGraph/edges/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/edges.html
$dokka.location:graphClasses/BaseGraph/finalPath/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/final-path.html
$dokka.location:graphClasses/BaseGraph/floydWarshall/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/floyd-warshall.html
$dokka.location:graphClasses/BaseGraph/foundTarget/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/found-target.html
$dokka.location:graphClasses/BaseGraph/furthestNode/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/furthest-node.html
$dokka.location:graphClasses/BaseGraph/getPath/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/get-path.html
$dokka.location:graphClasses/BaseGraph/maxDistance/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/max-distance.html
$dokka.location:graphClasses/BaseGraph/minimumSpanningTree/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/minimum-spanning-tree.html
$dokka.location:graphClasses/BaseGraph/neighbours/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/neighbours.html
$dokka.location:graphClasses/BaseGraph/nodes/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/nodes.html
$dokka.location:graphClasses/BaseGraph/print/#kotlin.Boolean/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/print.html
$dokka.location:graphClasses/BaseGraph/removeEdge/#TypeParam(bounds=[kotlin.Any])#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/remove-edge.html
$dokka.location:graphClasses/BaseGraph/resetSearchResults/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/reset-search-results.html
$dokka.location:graphClasses/BaseGraph/size/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/size.html
$dokka.location:graphClasses/BaseGraph/stronglyConnectedComponents/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/strongly-connected-components.html
$dokka.location:graphClasses/BaseGraph/topologicalSort/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/topological-sort.html
$dokka.location:graphClasses/BaseGraph/visitedNodes/#/PointingToDeclaration/graphmatekt/graphClasses/-base-graph/visited-nodes.html
$dokka.location:graphClasses/Graph///PointingToDeclaration/graphmatekt/graphClasses/-graph/index.html
$dokka.location:graphClasses/Graph/Graph/#kotlin.Boolean/PointingToDeclaration/graphmatekt/graphClasses/-graph/-graph.html
$dokka.location:graphClasses/Graph/addNode/#kotlin.Any/PointingToDeclaration/graphmatekt/graphClasses/-graph/add-node.html
$dokka.location:graphClasses/Graph/nodes/#/PointingToDeclaration/graphmatekt/graphClasses/-graph/nodes.html
$dokka.location:graphClasses/Graph/toString/#/PointingToDeclaration/graphmatekt/graphClasses/-graph/to-string.html
$dokka.location:graphClasses/Grid///PointingToDeclaration/graphmatekt/graphClasses/-grid/index.html
$dokka.location:graphClasses/Grid/Grid/#kotlin.Int#kotlin.Int#kotlin.Boolean#kotlin.Boolean/PointingToDeclaration/graphmatekt/graphClasses/-grid/-grid.html
$dokka.location:graphClasses/Grid/Grid/#kotlin.collections.List[kotlin.String]/PointingToDeclaration/graphmatekt/graphClasses/-grid/-grid.html
$dokka.location:graphClasses/Grid/addNode/#graphClasses.Tile/PointingToDeclaration/graphmatekt/graphClasses/-grid/add-node.html
$dokka.location:graphClasses/Grid/connectGrid/#kotlin.Boolean#kotlin.Function1[graphClasses.Tile,kotlin.collections.List[graphClasses.Tile]]/PointingToDeclaration/graphmatekt/graphClasses/-grid/connect-grid.html
$dokka.location:graphClasses/Grid/connectGridDefault/#/PointingToDeclaration/graphmatekt/graphClasses/-grid/connect-grid-default.html
$dokka.location:graphClasses/Grid/deleteNodeAtXY/#kotlin.Int#kotlin.Int/PointingToDeclaration/graphmatekt/graphClasses/-grid/delete-node-at-x-y.html
$dokka.location:graphClasses/Grid/deleteNodesWithData/#kotlin.Any?/PointingToDeclaration/graphmatekt/graphClasses/-grid/delete-nodes-with-data.html
$dokka.location:graphClasses/Grid/getAllNeighbours/#graphClasses.Tile/PointingToDeclaration/graphmatekt/graphClasses/-grid/get-all-neighbours.html
$dokka.location:graphClasses/Grid/getDiagonalNeighbours/#graphClasses.Tile/PointingToDeclaration/graphmatekt/graphClasses/-grid/get-diagonal-neighbours.html
$dokka.location:graphClasses/Grid/getStraightNeighbours/#graphClasses.Tile/PointingToDeclaration/graphmatekt/graphClasses/-grid/get-straight-neighbours.html
$dokka.location:graphClasses/Grid/height/#/PointingToDeclaration/graphmatekt/graphClasses/-grid/height.html
$dokka.location:graphClasses/Grid/nodes/#/PointingToDeclaration/graphmatekt/graphClasses/-grid/nodes.html
$dokka.location:graphClasses/Grid/print/#/PointingToDeclaration/graphmatekt/graphClasses/-grid/print.html
$dokka.location:graphClasses/Grid/stronglyConnectedComponents/#/PointingToDeclaration/graphmatekt/graphClasses/-grid/strongly-connected-components.html
$dokka.location:graphClasses/Grid/topologicalSort/#/PointingToDeclaration/graphmatekt/graphClasses/-grid/topological-sort.html
$dokka.location:graphClasses/Grid/width/#/PointingToDeclaration/graphmatekt/graphClasses/-grid/width.html
$dokka.location:graphClasses/Grid/xy2Node/#kotlin.Int#kotlin.Int/PointingToDeclaration/graphmatekt/graphClasses/-grid/xy2-node.html
$dokka.location:graphClasses/IntGraph///PointingToDeclaration/graphmatekt/graphClasses/-int-graph/index.html
$dokka.location:graphClasses/IntGraph/IntGraph/#kotlin.Int#kotlin.Boolean/PointingToDeclaration/graphmatekt/graphClasses/-int-graph/-int-graph.html
$dokka.location:graphClasses/IntGraph/addNode/#kotlin.Int/PointingToDeclaration/graphmatekt/graphClasses/-int-graph/add-node.html
$dokka.location:graphClasses/IntGraph/nodes/#/PointingToDeclaration/graphmatekt/graphClasses/-int-graph/nodes.html
$dokka.location:graphClasses/Tile///PointingToDeclaration/graphmatekt/graphClasses/-tile/index.html
$dokka.location:graphClasses/Tile/Tile/#kotlin.Int#kotlin.Int#kotlin.Any?/PointingToDeclaration/graphmatekt/graphClasses/-tile/-tile.html
$dokka.location:graphClasses/Tile/data/#/PointingToDeclaration/graphmatekt/graphClasses/-tile/data.html
$dokka.location:graphClasses/Tile/dataIsDigit/#/PointingToDeclaration/graphmatekt/graphClasses/-tile/data-is-digit.html
$dokka.location:graphClasses/Tile/x/#/PointingToDeclaration/graphmatekt/graphClasses/-tile/x.html
$dokka.location:graphClasses/Tile/xPlusYTimesWidth/#kotlin.Int/PointingToDeclaration/graphmatekt/graphClasses/-tile/x-plus-y-times-width.html
$dokka.location:graphClasses/Tile/y/#/PointingToDeclaration/graphmatekt/graphClasses/-tile/y.html
$dokka.location:graphGraphics////PointingToDeclaration/graphmatekt/graphGraphics/index.html
$dokka.location:graphGraphics//visualizeComponents/kotlin.collections.List[kotlin.collections.List[kotlin.Any]]#/PointingToDeclaration/graphmatekt/graphGraphics/visualize-components.html
$dokka.location:graphGraphics//visualizeGraph/graphClasses.BaseGraph[TypeParam(bounds=[kotlin.Any])]#kotlin.Boolean#kotlin.collections.List[TypeParam(bounds=[kotlin.Any])]#kotlin.String#kotlin.Double?#kotlin.Boolean#kotlin.Boolean#kotlin.Double?/PointingToDeclaration/graphmatekt/graphGraphics/visualize-graph.html
$dokka.location:graphGraphics//visualizeIntComponents/kotlin.collections.List[kotlin.collections.List[kotlin.Int]]#/PointingToDeclaration/graphmatekt/graphGraphics/visualize-int-components.html
$dokka.location:gridGraphics////PointingToDeclaration/graphmatekt/gridGraphics/index.html
$dokka.location:gridGraphics//visualizeGrid/graphClasses.Grid#kotlin.collections.List[graphClasses.Tile]#kotlin.collections.List[graphClasses.Tile]#kotlin.collections.List[kotlin.Double]#kotlin.String#kotlin.Double?#kotlin.Boolean#kotlin.Boolean#kotlin.Double?/PointingToDeclaration/graphmatekt/gridGraphics/visualize-grid.html
examples
graphClasses
graphGraphics
gridGraphics
